
 var {
    regDAO, 
    loginDAO, 
    getProductsDAO,
    getProductByIdDAO, 
    getOrdersDAO, 
    saveOrderDAO, 
    getCartDAO,
    saveToCartDAO,
    deleteCartDAO,
    saveAddressDAO,
    addressListDAO,
    updateProfileDAO
    } = require('../dao/customerDAO')
    
 const jwt = require('jsonwebtoken')  // for token at server side


// async function  loginService(data){
//  console.log("loginService");
// let resultLogin = await loginDAO(data)
// if(!resultLogin){
//     resultLogin = {
//         message: "Invalid Credentials"
//     }
// }
// return resultLogin;
// } 

// Token creation with jsonwebtoken library which is in server side
async function loginService(req) {
    const data = req.body.data;
    // console.log("loginService");
    let resultLogin = await loginDAO(data)
    if (resultLogin) {
        const token = jwt.sign(data, 'appToken') // data is userData and myToken is created token you can also add expiry time when token generated by {exp} pass token alongwith data
        resultLogin = {
            data: {
            ...resultLogin,  // old data means previous result and add token in it
            token
        }
     }
    }
    else {
        resultLogin = {
            data: { message: "Invalid Credentials" }
    }
   }
   return resultLogin;
   }

async function regService(req) {
 const data = req?.body.data;
 let result = await regDAO(data);
 return result;
}

async function getOrdersService(req) {
    // const id = req?.body.data;
    const id = req?.query.id;
    const res = await getOrdersDAO(id)
    // console.log("serviceOrders", res)
    return res.map((obj) => {
        return { ...obj?.productDetails, productId: obj?.productId, _id: obj._id }
    })
    // return res;
}

async function saveOrderService(req) {
    const data = req.body.data;   
   const res = await saveOrderDAO(data)
   return res;
}

async function cancelOrderService(req) {
const orderId = req.query.orderId;
const res = await cancelOrderDAO(orderId)
return res;
}

async function getCartService(req) {
    const id = req.body.id;
    const res = await getCartDAO(id);
    return res.map((obj) => {
        return { ...obj?.productDetails, productId: obj?.productId, _id: obj._id }
    })
}

async function saveToCartService(req) {
    const data = req.body.data
    const res = await saveToCartDAO(data) 
    return res;
}

async function deleteCartService(req) {
    const productId = req.query.productId;
    const uid = req?.query?.uid;
    const res = await deleteCartDAO(productId, uid)
    return res;
}

async function getProductsService() {
     const res = await getProductsDAO()
     return res;
}

async function getProductByIdService(req) {
    console.log(11, req?.query?.id)
    const res = await getProductByIdDAO(req?.query?.id)
    return res; 
}

async function addressListService(req) {
    console.log(112, req?.query?.id);
    id = req.body.id;
    const res = await addressListDAO(id)
    return res.map(({ name, phone, city, state, pin }) => {
        return {
            address: `  ${name},
                        ${state},
                        ${phone},
                        ${city},
                        ${pin}
                    `
        }
    })
}

async function saveAddressService(req) {
    const data = req.body.data
    const res = await saveAddressDAO(data)
    return res;
}

async function getCustomerByIdService(req) {
    const id = req?.query.id;
    const res = await getCustomerByIdDAO(id)
    return res[0];
}

async function updateProfileService(req){
    const id = req?.query.id;
    const data = req?.body.id;
    const res = await updateProfileDAO(id, data)
    return res; 
}

module.exports = {
    regService,
    loginService,
    getOrdersService,
    saveOrderService,
    cancelOrderService,
    getProductsService,
    getProductByIdService,
    getCartService,
    saveToCartService,
    deleteCartService,
    saveAddressService,
    addressListService,
    getCustomerByIdService,
    updateProfileService
}

// Token:
// eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiJjdXN0b21lcl8xIiwicGFzc3dvcmQiOiJjdXN0XzEiLCJpYXQiOjE3MTY3NTEzMzJ9.oloGzRZAxDYH4ZEaP3Z_RueOWHFQpZJsT3pYh2ULC1Q