
 var {
    regDAO, 
    loginDAO, 
    getProductsDAO, 
    getOrdersDAO, 
    saveOrderDAO, 
    getCartDAO,
    saveToCartDAO,
    deleteCartDAO 
    } = require('../dao/customerDAO')
    
 const jwt = require('jsonwebtoken')  // for token at server side


// async function  loginService(data){
//  console.log("loginService");
// let resultLogin = await loginDAO(data)
// if(!resultLogin){
//     resultLogin = {
//         message: "Invalid Credentials"
//     }
// }
// return resultLogin;
// } 

// Token creation with jsonwebtoken library which is in server side
async function  loginService(data){
    console.log("loginService");
    let resultLogin = await loginDAO(data)
    if(resultLogin){
      const token =  jwt.sign(data, 'appToken') // data is userData and myToken is created token you can also add expiry time when token generated by {exp}
     // pass token alongwith data
     resultLogin ={
        data:{
            ...resultLogin,  // old data means previous result and add token in it
            token
        }
     }
    }
    else {
        resultLogin = {
            data: {message: "Invalid Credentials"}
    }
   }
   return resultLogin;
   }

async function regService(data){
    console.log("services");
 const result = await regDAO(data)
 return result;
}

async function getOrdersService(req){
    const id = req.body.data;
    const res = await getOrdersDAO(id)
    return res;
}

async function saveOrderService(req){
    const data = req.body.data;   
   const res = await saveOrderDAO(data)
   return res;
}

async function cancelOrderService(req){
const orderId = req.query.orderId;
const res = await cancelOrderDAO(orderId)
return res;
}

async function getCartService(){
getCartDAO()
}

async function saveToCartService(){
saveToCartDAO()
}

async function deleteCartService(){
deleteCartDAO()
}

async function getProductsService(){
     const res = await getProductsDAO()
     return res;
}
module.exports = {
    regService,
    loginService,
    getOrdersService,
    saveOrderService,
    cancelOrderService,
    getProductsService,
    getCartService,
    saveToCartService,
    deleteCartService
}

// Token:
// eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiJjdXN0b21lcl8xIiwicGFzc3dvcmQiOiJjdXN0XzEiLCJpYXQiOjE3MTY3NTEzMzJ9.oloGzRZAxDYH4ZEaP3Z_RueOWHFQpZJsT3pYh2ULC1Q